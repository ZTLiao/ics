5.
+1001
补码：0000 1001
移码：1000 1001
-1001
补码：1111 0111
移码：0111 0111
+1
补码：0000 0001
移码：1000 0001
-1
补码：1111 1111
移码：0111 1111
+10100
补码：0001 0100
移码：1001 0100
-10100
补码：1110 1100
移码：0110 1100
+0
补码：0000 0000
移码：1000 0000
-0
补码：0000 0000
移码：0000 0000

13.
*x = b 
*y = a

14.
for(left = 0; left < right; left++, right--)

35.
(1) dx * dx >= 0 true
(2) (double)(float) x == dx false
(3) dx + dy == (double) (x + y) false
(4) (dx + dy) + dz == dx + (dy + dz) true
(5) dx * dy * dz == dz * dy * dx true
(6) dx / dx == dy / dy true

39.
0.75 * 2 = 1.5 => 1
0.5 * 2 = 1.0 => 1
0.75 二进制 0.11
1.1 * 2^-1
0 | 011 1 111 0 | 100 0000 0000 0000 0000 0000
3F400000
-65.25
65 二进制 100 0001
0.25 * 2 = 0.5 => 0
0.5 * 2 = 1 => 1
0.25 二进制 0.01
65.25 二进制 100 0001.01
1.00 000101 * 2^6 
1 | 100 0 010 1 | 000 0010 1000 0000 0000 0000
C2828000
(1) 0.75 + (-65.25)
求阶差
[E]补 = ([0111 1110]移 + [-[1000 0101]移]补) mod 2^8 = 0111 1110 + 0111 1011 = 1111 1001 = -7 
0.75 向 -65.25 对齐
小阶向大阶对齐
0.00000011 * 2^6
0 | 100 0 010 1 | 000 0001 1000 0000 0000 0000
符号位参与尾数运算
(符号位)(尾数)
尾数加
00.000 0001 1000 0000 0000 0000
+
11.000 0010 1000 0000 0000 0000
=
11.000 0001 0000 0000 0000 0000
1 | 100 0 010 1 | 000 0001 0000 0000 0000 0000 
C2810000
=
-64.25
(2) 0.75 - (-65.25)
求阶差
[E]补 = ([0111 1110]移 + [-[1000 0101]移]补) mod 2^8 = 0111 1110 + 0111 1011 = 1111 1001 = -7 
0.75 向 -65.25 对齐
小阶向大阶对齐
0.00000011 * 2^6
0 | 100 0 010 1 | 000 0001 1000 0000 0000 0000
符号位参与尾数运算
(符号位)(尾数)
尾数减
00.000 0001 1000 0000 0000 0000
-
11.000 0010 1000 0000 0000 0000
=
01.000 0100 0000 0000 0000 0000
0 | 100 0 010 1 | 000 0100 0000 0000 0000 0000 
42840000
=
66
